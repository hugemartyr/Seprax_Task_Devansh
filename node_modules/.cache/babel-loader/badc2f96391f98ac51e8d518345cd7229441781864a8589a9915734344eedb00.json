{"ast":null,"code":"import axios from \"axios\";\nimport Web3 from \"web3\";\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL1 = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\nconst COINGECKO_API_URL2 = \"https://min-api.cryptocompare.com/data/price?fsym=MATIC&tsyms=USD\";\nconst COINGECKO_API_URL3 = \"https://min-api.cryptocompare.com/data/price?fsym=LINK&tsyms=USD\";\nconst COINGECKO_API_URL4 = \"https://min-api.cryptocompare.com/data/price?fsym=AAVE&tsyms=USD\";\nconst COINGECKO_API_URL5 = \"https://min-api.cryptocompare.com/data/price?fsym=UNI&tsyms=USD\";\nexport let usdPrice = 0;\nexport const getEthPriceInUSD = async () => {\n  try {\n    let price;\n    const response = await axios.get(COINGECKO_API_URL1, {\n      params: {\n        ids: \"ethereum\",\n        vs_currencies: \"usd\"\n      }\n    });\n    const response2 = await axios.get(COINGECKO_API_URL2, {\n      params: {\n        ids: \"matic\",\n        vs_currencies: \"usd\"\n      }\n    });\n    const response3 = await axios.get(COINGECKO_API_URL3, {\n      params: {\n        ids: \"link\",\n        vs_currencies: \"usd\"\n      }\n    });\n    const response4 = await axios.get(COINGECKO_API_URL4, {\n      params: {\n        ids: \"aav\",\n        vs_currencies: \"usd\"\n      }\n    });\n    const response5 = await axios.get(COINGECKO_API_URL5, {\n      params: {\n        ids: \"ethereum\",\n        vs_currencies: \"usd\"\n      }\n    });\n    const ethPriceInUSD = response.data.USD;\n    const ethPriceInUSD2 = response2.data.USD;\n    const ethPriceInUSD3 = response3.data.USD;\n    const ethPriceInUSD4 = response4.data.USD;\n    const ethPriceInUSD5 = response5.data.USD;\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return {\n      ethPriceInUSD,\n      ethPriceInUSD2,\n      ethPriceInUSD3,\n      ethPriceInUSD4,\n      ethPriceInUSD5\n    };\n  } catch (error) {\n    console.error(\"Error fetching Ethereum price:\", error);\n    return null;\n  }\n};\nexport const convertWeiToUSD = wei => {\n  const etherValue = web3.utils.fromWei(wei, \"ether\");\n  return etherValue;\n};","map":{"version":3,"names":["axios","Web3","web3","COINGECKO_API_URL1","COINGECKO_API_URL2","COINGECKO_API_URL3","COINGECKO_API_URL4","COINGECKO_API_URL5","usdPrice","getEthPriceInUSD","price","response","get","params","ids","vs_currencies","response2","response3","response4","response5","ethPriceInUSD","data","USD","ethPriceInUSD2","ethPriceInUSD3","ethPriceInUSD4","ethPriceInUSD5","console","log","error","convertWeiToUSD","wei","etherValue","utils","fromWei"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/GetTokenBalance/GetTokenBalance.jsx"],"sourcesContent":["import axios from \"axios\";\nimport Web3 from \"web3\";\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL1 =\"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\nconst COINGECKO_API_URL2 =\"https://min-api.cryptocompare.com/data/price?fsym=MATIC&tsyms=USD\";\nconst COINGECKO_API_URL3 =\"https://min-api.cryptocompare.com/data/price?fsym=LINK&tsyms=USD\";\nconst COINGECKO_API_URL4 =\"https://min-api.cryptocompare.com/data/price?fsym=AAVE&tsyms=USD\";\nconst COINGECKO_API_URL5 =\"https://min-api.cryptocompare.com/data/price?fsym=UNI&tsyms=USD\";\n\nexport let usdPrice = 0;\n\nexport const getEthPriceInUSD = async () => {\n  try {\n\n    let price;\n\n    \n \n      const response = await axios.get(COINGECKO_API_URL1, {\n        params: {\n          ids: \"ethereum\",\n          vs_currencies: \"usd\",\n        },\n      });\n      const response2 = await axios.get(COINGECKO_API_URL2, {\n        params: {\n          ids: \"matic\",\n          vs_currencies: \"usd\",\n        },\n      });\n      const response3 = await axios.get(COINGECKO_API_URL3, {\n        params: {\n          ids: \"link\",\n          vs_currencies: \"usd\",\n        },\n      });\n      const response4 = await axios.get(COINGECKO_API_URL4, {\n        params: {\n          ids: \"aav\",\n          vs_currencies: \"usd\",\n        },\n      });\n      const response5 = await axios.get(COINGECKO_API_URL5, {\n        params: {\n          ids: \"ethereum\",\n          vs_currencies: \"usd\",\n        },\n      });\n    \n    const ethPriceInUSD = response.data.USD;\n    const ethPriceInUSD2 = response2.data.USD;\n    const ethPriceInUSD3 = response3.data.USD;\n    const ethPriceInUSD4 = response4.data.USD;\n    const ethPriceInUSD5 = response5.data.USD;\n\n\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return {ethPriceInUSD,ethPriceInUSD2,ethPriceInUSD3,ethPriceInUSD4,ethPriceInUSD5};\n  } catch (error) {\n    console.error(\"Error fetching Ethereum price:\", error);\n    return null;\n  }\n};\n\nexport const convertWeiToUSD = (wei) => {\n  const etherValue = web3.utils.fromWei(wei, \"ether\");\n  return etherValue;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAI,CAAC,CAAC;AACvB,MAAME,kBAAkB,GAAE,iEAAiE;AAC3F,MAAMC,kBAAkB,GAAE,mEAAmE;AAC7F,MAAMC,kBAAkB,GAAE,kEAAkE;AAC5F,MAAMC,kBAAkB,GAAE,kEAAkE;AAC5F,MAAMC,kBAAkB,GAAE,iEAAiE;AAE3F,OAAO,IAAIC,QAAQ,GAAG,CAAC;AAEvB,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IAEF,IAAIC,KAAK;IAIP,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACT,kBAAkB,EAAE;MACnDU,MAAM,EAAE;QACNC,GAAG,EAAE,UAAU;QACfC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,MAAMC,SAAS,GAAG,MAAMhB,KAAK,CAACY,GAAG,CAACR,kBAAkB,EAAE;MACpDS,MAAM,EAAE;QACNC,GAAG,EAAE,OAAO;QACZC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,MAAME,SAAS,GAAG,MAAMjB,KAAK,CAACY,GAAG,CAACP,kBAAkB,EAAE;MACpDQ,MAAM,EAAE;QACNC,GAAG,EAAE,MAAM;QACXC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,MAAMG,SAAS,GAAG,MAAMlB,KAAK,CAACY,GAAG,CAACN,kBAAkB,EAAE;MACpDO,MAAM,EAAE;QACNC,GAAG,EAAE,KAAK;QACVC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,MAAMI,SAAS,GAAG,MAAMnB,KAAK,CAACY,GAAG,CAACL,kBAAkB,EAAE;MACpDM,MAAM,EAAE;QACNC,GAAG,EAAE,UAAU;QACfC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IAEJ,MAAMK,aAAa,GAAGT,QAAQ,CAACU,IAAI,CAACC,GAAG;IACvC,MAAMC,cAAc,GAAGP,SAAS,CAACK,IAAI,CAACC,GAAG;IACzC,MAAME,cAAc,GAAGP,SAAS,CAACI,IAAI,CAACC,GAAG;IACzC,MAAMG,cAAc,GAAGP,SAAS,CAACG,IAAI,CAACC,GAAG;IACzC,MAAMI,cAAc,GAAGP,SAAS,CAACE,IAAI,CAACC,GAAG;IAGzCd,QAAQ,GAAGY,aAAa;IACxBO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEpB,QAAQ,CAAC;IAC/C,OAAO;MAACY,aAAa;MAACG,cAAc;MAACC,cAAc;MAACC,cAAc;MAACC;IAAc,CAAC;EACpF,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,GAAG,IAAK;EACtC,MAAMC,UAAU,GAAG9B,IAAI,CAAC+B,KAAK,CAACC,OAAO,CAACH,GAAG,EAAE,OAAO,CAAC;EACnD,OAAOC,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}