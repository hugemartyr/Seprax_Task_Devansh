{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ConnectWallet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectWallet = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access if needed\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        // Accounts now exposed, use them\n        setAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"User rejected the request:\", error);\n      }\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet, \"v+GsaBOyRPoPwJh7mxQ3zpEGSB8=\");\n_c = ConnectWallet;\nexport default ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConnectWallet","_s","account","setAccount","connectWallet","window","ethereum","accounts","request","method","error","console","alert","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConnectWallet.css';\n\nconst ConnectWallet = () => {\n  const [account, setAccount] = useState(null);\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access if needed\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        // Accounts now exposed, use them\n        setAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"User rejected the request:\", error);\n      }\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"connect-button\" onClick={connectWallet}>\n        {account ? `Connected: ${account}` : \"Connect MetaMask\"}\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF;QACAN,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,MAAM;MACLE,KAAK,CAAC,mEAAmE,CAAC;IAC5E;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAQe,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEX,aAAc;MAAAS,QAAA,EACvDX,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzBID,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}