{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenWatchlist/Tokenwatchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // Import ABI\nimport './TokenWatchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenWatchlist = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [watchlist, setWatchlist] = useState([]);\n  const [balances, setBalances] = useState({});\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(TokenWatchlistABI, '0x871Ada68c2155CaAd7309ab75d2821e41382E40E' // Replace with your deployed contract address\n      );\n      setContract(contractInstance);\n      fetchWatchlist(contractInstance, accounts[0]);\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n  const addTokenToWatchlist = async () => {\n    if (contract && account) {\n      try {\n        await contract.methods.addTokenToWatchlist(tokenAddress).send({\n          from: account\n        });\n        alert('Token added to watchlist successfully!');\n        fetchWatchlist(contract, account);\n        const a = await contract.methods.balanceOf(account).call();\n        console.log(a);\n      } catch (error) {\n        console.error(\"Error adding token to watchlist:\", error);\n      }\n    }\n  };\n  const fetchWatchlist = async (contractInstance, userAccount) => {\n    if (contractInstance && userAccount) {\n      try {\n        const tokens = await contractInstance.methods.getWatchlist().call({\n          from: userAccount\n        });\n        setWatchlist(tokens);\n\n        // Fetch balances for each token\n\n        //const a = await contractInstance.methods.balanceOf(account).call();\n        //console.log(a);\n\n        const balancePromises = tokens.map(token => contractInstance.methods.getTokenBalance(token, userAccount).call());\n        const balances = await Promise.all(balancePromises);\n\n        // Map tokens to their balances\n        const balanceMap = tokens.reduce((map, token, index) => {\n          map[token] = balances[index];\n          return map;\n        }, {});\n        setBalances(balanceMap);\n      } catch (error) {\n        console.error(\"Error fetching watchlist:\", error);\n      }\n    }\n  };\n  const removeTokenFromWatchlist = async token => {\n    if (contract && account) {\n      try {\n        await contract.methods.removeTokenFromWatchlist(token).send({\n          from: account\n        });\n        alert('Token removed from watchlist successfully!');\n        fetchWatchlist(contract, account);\n      } catch (error) {\n        console.error(\"Error removing token from watchlist:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter token address\",\n        value: tokenAddress,\n        onChange: e => setTokenAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: addTokenToWatchlist,\n        children: \"Add Token to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Watchlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: watchlist.map((token, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [token, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Balance: \", balances[token] || 'Loading...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => removeTokenFromWatchlist(token),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(TokenWatchlist, \"osTimeQJJvSf+dudmLkKMkmG5hU=\");\n_c = TokenWatchlist;\nexport default TokenWatchlist;\n\n// Ethereum : 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\n// AAVE Token : 0xD6DF932A45C0f255f85145f286eA0b292B21C90B\n// Sepolia : 0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43\nvar _c;\n$RefreshReg$(_c, \"TokenWatchlist\");","map":{"version":3,"names":["React","useState","useEffect","Web3","TokenWatchlistABI","jsxDEV","_jsxDEV","TokenWatchlist","_s","account","setAccount","web3","setWeb3","contract","setContract","tokenAddress","setTokenAddress","watchlist","setWatchlist","balances","setBalances","window","ethereum","web3Instance","alert","connectWallet","accounts","request","method","contractInstance","eth","Contract","fetchWatchlist","error","console","addTokenToWatchlist","methods","send","from","a","balanceOf","call","log","userAccount","tokens","getWatchlist","balancePromises","map","token","getTokenBalance","Promise","all","balanceMap","reduce","index","removeTokenFromWatchlist","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenWatchlist/Tokenwatchlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // Import ABI\nimport './TokenWatchlist.css';\n\nconst TokenWatchlist = () => {\n    const [account, setAccount] = useState(null);\n    const [web3, setWeb3] = useState(null);\n    const [contract, setContract] = useState(null);\n    const [tokenAddress, setTokenAddress] = useState('');\n    const [watchlist, setWatchlist] = useState([]);\n    const [balances, setBalances] = useState({});\n\n    useEffect(() => {\n        if (window.ethereum) {\n            const web3Instance = new Web3(window.ethereum);\n            setWeb3(web3Instance);\n        } else {\n            alert('MetaMask is not installed. Please install it to use this feature.');\n        }\n    }, []);\n\n    const connectWallet = async () => {\n        try {\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n            setAccount(accounts[0]);\n\n            // Initialize contract instance\n            const contractInstance = new web3.eth.Contract(\n                TokenWatchlistABI,\n                '0x871Ada68c2155CaAd7309ab75d2821e41382E40E' // Replace with your deployed contract address\n            );\n            setContract(contractInstance);\n            fetchWatchlist(contractInstance, accounts[0]);\n        } catch (error) {\n            console.error(\"Error connecting to MetaMask:\", error);\n        }\n    };\n\n    const addTokenToWatchlist = async () => {\n        if (contract && account) {\n            try {\n                await contract.methods.addTokenToWatchlist(tokenAddress).send({ from: account });\n                alert('Token added to watchlist successfully!');\n                fetchWatchlist(contract, account);\n\n\n                const a = await contract.methods.balanceOf(account).call();\n                console.log(a);\n\n            } catch (error) {\n                console.error(\"Error adding token to watchlist:\", error);\n            }\n        }\n    };\n\n    const fetchWatchlist = async (contractInstance, userAccount) => {\n        if (contractInstance && userAccount) {\n            try {\n                const tokens = await contractInstance.methods.getWatchlist().call({ from: userAccount });\n                setWatchlist(tokens);\n\n                // Fetch balances for each token\n                \n                //const a = await contractInstance.methods.balanceOf(account).call();\n                //console.log(a);\n                \n                const balancePromises = tokens.map(token => \n                  contractInstance.methods.getTokenBalance(token, userAccount).call()\n                );\n                const balances = await Promise.all(balancePromises);\n\n                // Map tokens to their balances\n                const balanceMap = tokens.reduce((map, token, index) => {\n                  map[token] = balances[index];\n                  return map;\n                }, {});\n                setBalances(balanceMap);\n            } catch (error) {\n                console.error(\"Error fetching watchlist:\", error);\n            }\n        }\n    };\n\n    const removeTokenFromWatchlist = async (token) => {\n        if (contract && account) {\n            try {\n                await contract.methods.removeTokenFromWatchlist(token).send({ from: account });\n                alert('Token removed from watchlist successfully!');\n                fetchWatchlist(contract, account);\n            } catch (error) {\n                console.error(\"Error removing token from watchlist:\", error);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <button className=\"connect-button\" onClick={connectWallet}>\n                {account ? `Connected: ${account}` : 'Connect Wallet'}\n            </button>\n            {account && (\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter token address\"\n                        value={tokenAddress}\n                        onChange={(e) => setTokenAddress(e.target.value)}\n                    />\n                    <button className=\"connect-button\" onClick={addTokenToWatchlist}>Add Token to Watchlist</button>\n                    <h3>Watchlist:</h3>\n                    <ul>\n                        {watchlist.map((token, index) => (\n                            <li key={index}>\n                                {token}\n                                <span>Balance: {balances[token] || 'Loading...'}</span>\n                                <button className=\"remove-button\" onClick={() => removeTokenFromWatchlist(token)}>Remove</button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TokenWatchlist;\n\n\n\n// Ethereum : 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\n// AAVE Token : 0xD6DF932A45C0f255f85145f286eA0b292B21C90B\n// Sepolia : 0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}