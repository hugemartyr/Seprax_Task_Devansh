{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/GetTokenBalance/GetTokenBalance.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { usdPrice, getEthPriceInUSD } from \"./GetTokenBalance.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetTokenBalance = () => {\n  _s();\n  const [a, setA] = useState([]);\n  const [ETH, setETH] = useState();\n  const [LINK, setLINK] = useState();\n  const [AAVE, setAAVE] = useState();\n  const [UNI, setUNI] = useState();\n  const [MATIC, setMATIC] = useState();\n  async function fetchPrice() {\n    let prices = await getEthPriceInUSD();\n    console.log(prices);\n    setETH(prices[0]);\n    setMATIC(prices[1]);\n    setLINK(prices[2]);\n    setAAVE(prices[3]);\n    setUNI(prices[4]);\n\n    //return a;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPrice,\n      children: \" Click Me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", a]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(GetTokenBalance, \"8HDufCxEgEN5hSfkd1odp74VsVM=\");\n_c = GetTokenBalance;\nexport default GetTokenBalance;\nvar _c;\n$RefreshReg$(_c, \"GetTokenBalance\");","map":{"version":3,"names":["useState","usdPrice","getEthPriceInUSD","jsxDEV","_jsxDEV","Fragment","_Fragment","GetTokenBalance","_s","a","setA","ETH","setETH","LINK","setLINK","AAVE","setAAVE","UNI","setUNI","MATIC","setMATIC","fetchPrice","prices","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/GetTokenBalance/GetTokenBalance.js"],"sourcesContent":["import { useState } from \"react\";\nimport { usdPrice, getEthPriceInUSD } from \"./GetTokenBalance.jsx\";\n\n\nconst GetTokenBalance = () => {\n\n    const [a, setA] = useState([]);\n\n    const [ETH,setETH]=useState();\n    const [LINK,setLINK]=useState();\n    const [AAVE,setAAVE]=useState();\n    const [UNI,setUNI]=useState();\n    const [MATIC,setMATIC]=useState();\n    \n    async function fetchPrice() {\n        let prices = await getEthPriceInUSD();\n        console.log(prices);\n        setETH(prices[0]);\n        setMATIC(prices[1]);\n        setLINK(prices[2]);\n        setAAVE(prices[3]);\n        setUNI(prices[4]);\n      \n\n\n        //return a;\n    }\n\n\n    return (<>\n        <button onClick={fetchPrice}> Click Me </button>\n        <p> {a}</p>\n\n    </>\n\n    );\n\n}\n\nexport default GetTokenBalance;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGnE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,CAAC,EAAEC,IAAI,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9B,MAAM,CAACW,GAAG,EAACC,MAAM,CAAC,GAACZ,QAAQ,CAAC,CAAC;EAC7B,MAAM,CAACa,IAAI,EAACC,OAAO,CAAC,GAACd,QAAQ,CAAC,CAAC;EAC/B,MAAM,CAACe,IAAI,EAACC,OAAO,CAAC,GAAChB,QAAQ,CAAC,CAAC;EAC/B,MAAM,CAACiB,GAAG,EAACC,MAAM,CAAC,GAAClB,QAAQ,CAAC,CAAC;EAC7B,MAAM,CAACmB,KAAK,EAACC,QAAQ,CAAC,GAACpB,QAAQ,CAAC,CAAC;EAEjC,eAAeqB,UAAUA,CAAA,EAAG;IACxB,IAAIC,MAAM,GAAG,MAAMpB,gBAAgB,CAAC,CAAC;IACrCqB,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBV,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;IACjBF,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;IACnBR,OAAO,CAACQ,MAAM,CAAC,CAAC,CAAC,CAAC;IAClBN,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IAClBJ,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;;IAIjB;EACJ;EAGA,oBAAQlB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACJrB,OAAA;MAAQsB,OAAO,EAAEL,UAAW;MAAAI,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD1B,OAAA;MAAAqB,QAAA,GAAG,GAAC,EAAChB,CAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAEb,CAAC;AAIP,CAAC;AAAAtB,EAAA,CAjCKD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAmCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}