{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport SimpleStorageABI from './SimpleStorageABI.json'; // Import ABI\nimport './ConnectWallet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectWallet1 = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [value, setValue] = useState('');\n  const [storedValue, setStoredValue] = useState(null);\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n\n      // Get the balance of the connected account\n      const accountBalance = await web3.eth.getBalance(accounts[0]);\n      setBalance(web3.utils.fromWei(accountBalance, 'ether')); // Convert balance from Wei to Ether\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(SimpleStorageABI, '0xf1D37Af665F597b88Da0858883240555453D65Fc' // Your deployed contract address\n      );\n      setContract(contractInstance);\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n  const storeValue = async () => {\n    if (contract && account) {\n      try {\n        // Trigger MetaMask to send a transaction\n        await contract.methods.set(value).send({\n          from: account\n        });\n        alert('Value stored successfully!');\n      } catch (error) {\n        console.error(\"Error storing value:\", error);\n      }\n    }\n  };\n  const fetchStoredValue = async () => {\n    if (contract) {\n      try {\n        // Make a call to the contract to get the stored value\n        console.log(\"Fetching the stored value...\");\n        const storedValue = await contract.methods.get().call();\n        console.log(\"Fetched value:\", storedValue);\n        alert('Value stored = ' + storedValue);\n        setStoredValue(storedValue);\n      } catch (error) {\n        console.error(\"Error fetching stored value:\", error.message || error);\n      }\n    } else {\n      console.error(\"Contract is not initialized\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Account Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Enter value to store\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: storeValue,\n        children: \"Store Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: fetchStoredValue,\n        children: \"Fetch Stored Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), storedValue !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stored-value\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stored Value: \", storedValue, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet1, \"/XxKRxDAhL32CSKrn+4EKvMS9Js=\");\n_c = ConnectWallet1;\nexport default ConnectWallet1;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet1\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SimpleStorageABI","jsxDEV","_jsxDEV","ConnectWallet1","_s","account","setAccount","web3","setWeb3","contract","setContract","value","setValue","storedValue","setStoredValue","balance","setBalance","window","ethereum","web3Instance","alert","connectWallet","accounts","request","method","accountBalance","eth","getBalance","utils","fromWei","contractInstance","Contract","error","console","storeValue","methods","set","send","from","fetchStoredValue","log","get","call","message","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport SimpleStorageABI from './SimpleStorageABI.json'; // Import ABI\nimport './ConnectWallet.css';\n\nconst ConnectWallet1 = () => {\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [value, setValue] = useState('');\n  const [storedValue, setStoredValue] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n\n      // Get the balance of the connected account\n      const accountBalance = await web3.eth.getBalance(accounts[0]);\n      setBalance(web3.utils.fromWei(accountBalance, 'ether')); // Convert balance from Wei to Ether\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(\n        SimpleStorageABI,\n        '0xf1D37Af665F597b88Da0858883240555453D65Fc' // Your deployed contract address\n      );\n      setContract(contractInstance);\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n\n  const storeValue = async () => {\n    if (contract && account) {\n      try {\n        // Trigger MetaMask to send a transaction\n        await contract.methods.set(value).send({ from: account });\n        alert('Value stored successfully!');\n      } catch (error) {\n        console.error(\"Error storing value:\", error);\n      }\n    }\n  };\n\n  const fetchStoredValue = async () => {\n    if (contract) {\n      try {\n        // Make a call to the contract to get the stored value\n        console.log(\"Fetching the stored value...\");\n        const storedValue = await contract.methods.get().call();\n        console.log(\"Fetched value:\", storedValue);\n        alert('Value stored = ' + storedValue);\n\n        setStoredValue(storedValue);\n      } catch (error) {\n        console.error(\"Error fetching stored value:\", error.message || error);\n      }\n    } else {\n      console.error(\"Contract is not initialized\");\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"connect-button\" onClick={connectWallet}>\n        {account ? `Connected: ${account}` : 'Connect Wallet'}\n      </button>\n      {account && (\n        <div>\n          <p>Account Balance: {balance} ETH</p>\n          <input \n            type=\"number\" \n            placeholder=\"Enter value to store\" \n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <button className=\"connect-button\" onClick={storeValue}>Store Value</button>\n          <button className=\"connect-button\" onClick={fetchStoredValue}>Fetch Stored Value</button>\n          {storedValue !== null && (\n            <div className=\"stored-value\">\n              <p>Stored Value: {storedValue} </p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectWallet1;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}