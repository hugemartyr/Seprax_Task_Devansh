{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { usdPrice, getEthPriceInUSD } from \"./GetTokenBalance.jsx\";\nconst GetTokenBalance = () => {\n  _s();\n  // const [a, setA] = useState([]);\n\n  const [ETH, setETH] = useState();\n  const [LINK, setLINK] = useState();\n  const [AAVE, setAAVE] = useState();\n  const [UNI, setUNI] = useState();\n  const [MATIC, setMATIC] = useState();\n  async function fetchPrice() {\n    let prices = await getEthPriceInUSD();\n    console.log(prices);\n    setETH(prices.ethPriceInUSD);\n    setMATIC(prices.ethPriceInUSD2);\n    setLINK(prices.ethPriceInUSD3);\n    setAAVE(prices.ethPriceInUSD4);\n    setUNI(prices.ethPriceInUSD5);\n    console.log({\n      ETH\n    });\n\n    //return a;\n  }\n\n  // return (<>\n  //     <button onClick={fetchPrice}> Click Me </button>\n  //     <div className=\"table-container\">\n  //         <table>\n  //             <caption>Historical Token Price</caption>\n  //             <thead>\n  //                 <tr>\n  //                     <th>Token</th>\n  //                     <th>Balance</th>\n  //                     <th>Date</th>\n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {/* {historicalData.map((item, index) => (\n  //                     <tr key={index}>\n  //                         <td>{item.token}</td>\n  //                         <td>{item.balance}</td>\n  //                         <td>{item.date}</td>\n  //                     </tr>\n  //                 ))} */}\n  //             </tbody>\n  //         </table>\n  //     </div>\n\n  // </>\n\n  // );\n};\n_s(GetTokenBalance, \"93HmsXuBQCvsdHJuMKfx+70t/lU=\");\n_c = GetTokenBalance;\nexport default GetTokenBalance;\nvar _c;\n$RefreshReg$(_c, \"GetTokenBalance\");","map":{"version":3,"names":["useState","usdPrice","getEthPriceInUSD","GetTokenBalance","_s","ETH","setETH","LINK","setLINK","AAVE","setAAVE","UNI","setUNI","MATIC","setMATIC","fetchPrice","prices","console","log","ethPriceInUSD","ethPriceInUSD2","ethPriceInUSD3","ethPriceInUSD4","ethPriceInUSD5","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/GetTokenBalance/GetTokenBalance.js"],"sourcesContent":["import { useState } from \"react\";\nimport { usdPrice, getEthPriceInUSD } from \"./GetTokenBalance.jsx\";\n\n\nconst GetTokenBalance = () => {\n\n    // const [a, setA] = useState([]);\n\n    const [ETH, setETH] = useState();\n    const [LINK, setLINK] = useState();\n    const [AAVE, setAAVE] = useState();\n    const [UNI, setUNI] = useState();\n    const [MATIC, setMATIC] = useState();\n\n    async function fetchPrice() {\n        let prices = await getEthPriceInUSD();\n        console.log(prices);\n        setETH(prices.ethPriceInUSD);\n        setMATIC(prices.ethPriceInUSD2);\n        setLINK(prices.ethPriceInUSD3);\n        setAAVE(prices.ethPriceInUSD4);\n        setUNI(prices.ethPriceInUSD5);\n        console.log( {ETH} );\n\n\n        //return a;\n    }\n\n\n    // return (<>\n    //     <button onClick={fetchPrice}> Click Me </button>\n    //     <div className=\"table-container\">\n    //         <table>\n    //             <caption>Historical Token Price</caption>\n    //             <thead>\n    //                 <tr>\n    //                     <th>Token</th>\n    //                     <th>Balance</th>\n    //                     <th>Date</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 {/* {historicalData.map((item, index) => (\n    //                     <tr key={index}>\n    //                         <td>{item.token}</td>\n    //                         <td>{item.balance}</td>\n    //                         <td>{item.date}</td>\n    //                     </tr>\n    //                 ))} */}\n    //             </tbody>\n    //         </table>\n    //     </div>\n\n    // </>\n\n    // );\n\n}\n\nexport default GetTokenBalance;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,uBAAuB;AAGlE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B;;EAEA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEpC,eAAee,UAAUA,CAAA,EAAG;IACxB,IAAIC,MAAM,GAAG,MAAMd,gBAAgB,CAAC,CAAC;IACrCe,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBV,MAAM,CAACU,MAAM,CAACG,aAAa,CAAC;IAC5BL,QAAQ,CAACE,MAAM,CAACI,cAAc,CAAC;IAC/BZ,OAAO,CAACQ,MAAM,CAACK,cAAc,CAAC;IAC9BX,OAAO,CAACM,MAAM,CAACM,cAAc,CAAC;IAC9BV,MAAM,CAACI,MAAM,CAACO,cAAc,CAAC;IAC7BN,OAAO,CAACC,GAAG,CAAE;MAACb;IAAG,CAAE,CAAC;;IAGpB;EACJ;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;AAEJ,CAAC;AAAAD,EAAA,CArDKD,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}