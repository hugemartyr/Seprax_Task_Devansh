{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenWatchlist/Tokenwatchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // Import ABI\nimport './TokenWatchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenWatchlist = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [watchlist, setWatchlist] = useState([]);\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(TokenWatchlistABI, '0xb34d20F12251fdeB54e7D6941bB4eC43C05403C0' // Replace with your deployed contract address\n      );\n      setContract(contractInstance);\n      fetchWatchlist(contractInstance, accounts[0]);\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n  const addTokenToWatchlist = async () => {\n    if (contract && account) {\n      try {\n        await contract.methods.addTokenToWatchlist(tokenAddress).send({\n          from: account\n        });\n        alert('Token added to watchlist successfully!');\n        fetchWatchlist(contract, account);\n      } catch (error) {\n        console.error(\"Error adding token to watchlist:\", error);\n      }\n    }\n  };\n  const fetchWatchlist = async (contractInstance, userAccount) => {\n    if (contractInstance && userAccount) {\n      try {\n        // Fetch the watchlist from the smart contract\n        const watchlist = await contractInstance.methods.getWatchlist().call({\n          from: userAccount\n        });\n\n        // Log the watchlist to verify the data structure\n        console.log(\"Fetched Watchlist:\", watchlist);\n\n        // Update the state with the fetched watchlist\n        setWatchlist(watchlist);\n      } catch (error) {\n        console.error(\"Error fetching watchlist:\", error);\n      }\n    }\n  };\n  const removeTokenFromWatchlist = async token => {\n    if (contract && account) {\n      try {\n        await contract.methods.removeTokenFromWatchlist(token).send({\n          from: account\n        });\n        alert('Token removed from watchlist successfully!');\n        fetchWatchlist(contract, account);\n      } catch (error) {\n        console.error(\"Error removing token from watchlist:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter token address\",\n        value: tokenAddress,\n        onChange: e => setTokenAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: addTokenToWatchlist,\n        children: \"Add Token to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Watchlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: watchlist.map((token, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [token, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-button\",\n            onClick: () => removeTokenFromWatchlist(token),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenWatchlist, \"KbwPDZCo+fikSevbZtOESoiK4Rs=\");\n_c = TokenWatchlist;\nexport default TokenWatchlist;\n\n// Ethereum : 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\n// AAVE Token : 0xD6DF932A45C0f255f85145f286eA0b292B21C90B\n// Sepolia : 0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43\nvar _c;\n$RefreshReg$(_c, \"TokenWatchlist\");","map":{"version":3,"names":["React","useState","useEffect","Web3","TokenWatchlistABI","jsxDEV","_jsxDEV","TokenWatchlist","_s","account","setAccount","web3","setWeb3","contract","setContract","tokenAddress","setTokenAddress","watchlist","setWatchlist","window","ethereum","web3Instance","alert","connectWallet","accounts","request","method","contractInstance","eth","Contract","fetchWatchlist","error","console","addTokenToWatchlist","methods","send","from","userAccount","getWatchlist","call","log","removeTokenFromWatchlist","token","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","index","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenWatchlist/Tokenwatchlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // Import ABI\nimport './TokenWatchlist.css';\n\nconst TokenWatchlist = () => {\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [tokenAddress, setTokenAddress] = useState('');\n  const [watchlist, setWatchlist] = useState([]);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(\n        TokenWatchlistABI,\n        '0xb34d20F12251fdeB54e7D6941bB4eC43C05403C0' // Replace with your deployed contract address\n      );\n      setContract(contractInstance);\n      fetchWatchlist(contractInstance, accounts[0]);\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n\n  const addTokenToWatchlist = async () => {\n    if (contract && account) {\n      try {\n        await contract.methods.addTokenToWatchlist(tokenAddress).send({ from: account });\n        alert('Token added to watchlist successfully!');\n        fetchWatchlist(contract, account);\n      } catch (error) {\n        console.error(\"Error adding token to watchlist:\", error);\n      }\n    }\n  };\n\n  const fetchWatchlist = async (contractInstance, userAccount) => {\n    if (contractInstance && userAccount) {\n        try {\n            // Fetch the watchlist from the smart contract\n            const watchlist = await contractInstance.methods.getWatchlist().call({\n                from: userAccount\n            });\n            \n            // Log the watchlist to verify the data structure\n            console.log(\"Fetched Watchlist:\", watchlist);\n            \n            // Update the state with the fetched watchlist\n            setWatchlist(watchlist);\n        } catch (error) {\n            console.error(\"Error fetching watchlist:\", error);\n        }\n    }\n};\n\n  \n\n  const removeTokenFromWatchlist = async (token) => {\n    if (contract && account) {\n      try {\n        await contract.methods.removeTokenFromWatchlist(token).send({ from: account });\n        alert('Token removed from watchlist successfully!');\n        fetchWatchlist(contract, account);\n      } catch (error) {\n        console.error(\"Error removing token from watchlist:\", error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"connect-button\" onClick={connectWallet}>\n        {account ? `Connected: ${account}` : 'Connect Wallet'}\n      </button>\n      {account && (\n        <div>\n          <input \n            type=\"text\" \n            placeholder=\"Enter token address\" \n            value={tokenAddress}\n            onChange={(e) => setTokenAddress(e.target.value)}\n          />\n          <button className=\"connect-button\" onClick={addTokenToWatchlist}>Add Token to Watchlist</button>\n          <h3>Watchlist:</h3>\n          <ul>\n            {watchlist.map((token, index) => (\n              <li key={index}>\n                {token}\n                <button className=\"remove-button\" onClick={() => removeTokenFromWatchlist(token)}>Remove</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TokenWatchlist;\n\n\n// Ethereum : 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\n// AAVE Token : 0xD6DF932A45C0f255f85145f286eA0b292B21C90B\n// Sepolia : 0x1b44F3514812d835EB1BDB0acB33d3fA3351Ee43"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}