{"ast":null,"code":"import axios from \"axios\";\nimport Web3 from \"web3\";\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL1 = \"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\nconst COINGECKO_API_URL2 = \"https://min-api.cryptocompare.com/data/price?fsym=MATIC&tsyms=USD\";\nconst COINGECKO_API_URL3 = \"https://min-api.cryptocompare.com/data/price?fsym=LINK&tsyms=USD\";\nconst COINGECKO_API_URL4 = \"https://min-api.cryptocompare.com/data/price?fsym=AAVE&tsyms=USD\";\nconst COINGECKO_API_URL5 = \"https://min-api.cryptocompare.com/data/price?fsym=UNI&tsyms=USD\";\nexport let usdPrice = 0;\nexport const getEthPriceInUSD = async () => {\n  try {\n    for (let i = 0; i < 6; i++) {\n      const response = await axios.get(COINGECKO_API_URL, {\n        params: {\n          ids: \"ethereum\",\n          vs_currencies: \"usd\"\n        }\n      });\n    }\n    const ethPriceInUSD = response.data.USD;\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return ethPriceInUSD;\n  } catch (error) {\n    console.error(\"Error fetching Ethereum price:\", error);\n    return null;\n  }\n};\nexport const convertWeiToUSD = wei => {\n  const etherValue = web3.utils.fromWei(wei, \"ether\");\n  return etherValue;\n};","map":{"version":3,"names":["axios","Web3","web3","COINGECKO_API_URL1","COINGECKO_API_URL2","COINGECKO_API_URL3","COINGECKO_API_URL4","COINGECKO_API_URL5","usdPrice","getEthPriceInUSD","i","response","get","COINGECKO_API_URL","params","ids","vs_currencies","ethPriceInUSD","data","USD","console","log","error","convertWeiToUSD","wei","etherValue","utils","fromWei"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/GetTokenBalance/GetTokenBalance.jsx"],"sourcesContent":["import axios from \"axios\";\nimport Web3 from \"web3\";\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL1 =\"https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD\";\nconst COINGECKO_API_URL2 =\"https://min-api.cryptocompare.com/data/price?fsym=MATIC&tsyms=USD\";\nconst COINGECKO_API_URL3 =\"https://min-api.cryptocompare.com/data/price?fsym=LINK&tsyms=USD\";\nconst COINGECKO_API_URL4 =\"https://min-api.cryptocompare.com/data/price?fsym=AAVE&tsyms=USD\";\nconst COINGECKO_API_URL5 =\"https://min-api.cryptocompare.com/data/price?fsym=UNI&tsyms=USD\";\n\nexport let usdPrice = 0;\n\nexport const getEthPriceInUSD = async () => {\n  try {\n\n\n    for (let i=0;i<6;i++){\n      const response = await axios.get(COINGECKO_API_URL, {\n        params: {\n          ids: \"ethereum\",\n          vs_currencies: \"usd\",\n        },\n      });\n    }\n\n    const ethPriceInUSD = response.data.USD;\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return ethPriceInUSD;\n  } catch (error) {\n    console.error(\"Error fetching Ethereum price:\", error);\n    return null;\n  }\n};\n\nexport const convertWeiToUSD = (wei) => {\n  const etherValue = web3.utils.fromWei(wei, \"ether\");\n  return etherValue;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAI,CAAC,CAAC;AACvB,MAAME,kBAAkB,GAAE,iEAAiE;AAC3F,MAAMC,kBAAkB,GAAE,mEAAmE;AAC7F,MAAMC,kBAAkB,GAAE,kEAAkE;AAC5F,MAAMC,kBAAkB,GAAE,kEAAkE;AAC5F,MAAMC,kBAAkB,GAAE,iEAAiE;AAE3F,OAAO,IAAIC,QAAQ,GAAG,CAAC;AAEvB,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IAGF,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;MACnB,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACC,iBAAiB,EAAE;QAClDC,MAAM,EAAE;UACNC,GAAG,EAAE,UAAU;UACfC,aAAa,EAAE;QACjB;MACF,CAAC,CAAC;IACJ;IAEA,MAAMC,aAAa,GAAGN,QAAQ,CAACO,IAAI,CAACC,GAAG;IACvCX,QAAQ,GAAGS,aAAa;IACxBG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEb,QAAQ,CAAC;IAC/C,OAAOS,aAAa;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,GAAG,IAAK;EACtC,MAAMC,UAAU,GAAGvB,IAAI,CAACwB,KAAK,CAACC,OAAO,CAACH,GAAG,EAAE,OAAO,CAAC;EACnD,OAAOC,UAAU;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}