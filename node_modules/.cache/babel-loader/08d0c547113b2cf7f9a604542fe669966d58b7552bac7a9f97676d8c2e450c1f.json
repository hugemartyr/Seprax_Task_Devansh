{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenBalanceViewer/TokenBalanceViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // ABI for TokenWatchlist contract\nimport ERC20ABI from './ERC20ABI.json'; // ABI for ERC20 token contract\nimport './TokenBalanceViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenBalanceViewer = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [watchlist, setWatchlist] = useState([]);\n  const [balances, setBalances] = useState({});\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(TokenWatchlistABI, '0xYourTokenWatchlistContractAddress' // Replace with your deployed contract address\n      );\n      setContract(contractInstance);\n      fetchWatchlist();\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n  const fetchWatchlist = async () => {\n    if (contract && account) {\n      try {\n        const tokens = await contract.methods.getWatchlist().call();\n        setWatchlist(tokens);\n        fetchBalances(tokens);\n        console.log(fetchBalances);\n      } catch (error) {\n        console.error(\"Error fetching watchlist:\", error);\n      }\n    }\n  };\n  const fetchBalances = async tokens => {\n    if (web3 && account) {\n      const newBalances = {};\n      for (const token of tokens) {\n        try {\n          const tokenContract = new web3.eth.Contract(ERC20ABI, token);\n          const balance = await tokenContract.methods.balanceOf(account).call();\n          newBalances[token] = web3.utils.fromWei(balance, 'ether');\n        } catch (error) {\n          console.error(`Error fetching balance for token ${token}:`, error);\n          newBalances[token] = 'Error';\n        }\n      }\n      setBalances(newBalances);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : 'Connect Wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Watchlist:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: watchlist.length > 0 ? watchlist.map((token, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Token Address: \", token]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Balance: \", balances[token] !== undefined ? balances[token] : 'Fetching...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tokens in your watchlist.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenBalanceViewer, \"E9pOOJ5PdNC4UEXvD8wCEzgkwtM=\");\n_c = TokenBalanceViewer;\nexport default TokenBalanceViewer;\nvar _c;\n$RefreshReg$(_c, \"TokenBalanceViewer\");","map":{"version":3,"names":["React","useState","useEffect","Web3","TokenWatchlistABI","ERC20ABI","jsxDEV","_jsxDEV","TokenBalanceViewer","_s","account","setAccount","web3","setWeb3","contract","setContract","watchlist","setWatchlist","balances","setBalances","window","ethereum","web3Instance","alert","connectWallet","accounts","request","method","contractInstance","eth","Contract","fetchWatchlist","error","console","tokens","methods","getWatchlist","call","fetchBalances","log","newBalances","token","tokenContract","balance","balanceOf","utils","fromWei","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","undefined","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/TokenBalanceViewer/TokenBalanceViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport TokenWatchlistABI from './TokenWatchlistABI.json'; // ABI for TokenWatchlist contract\nimport ERC20ABI from './ERC20ABI.json'; // ABI for ERC20 token contract\nimport './TokenBalanceViewer.css';\n\nconst TokenBalanceViewer = () => {\n  const [account, setAccount] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [watchlist, setWatchlist] = useState([]);\n  const [balances, setBalances] = useState({});\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n\n      // Initialize contract instance\n      const contractInstance = new web3.eth.Contract(\n        TokenWatchlistABI,\n        '0xYourTokenWatchlistContractAddress' // Replace with your deployed contract address\n      );\n      setContract(contractInstance);\n      fetchWatchlist();\n    } catch (error) {\n      console.error(\"Error connecting to MetaMask:\", error);\n    }\n  };\n\n  const fetchWatchlist = async () => {\n    if (contract && account) {\n      try {\n        const tokens = await contract.methods.getWatchlist().call();\n        setWatchlist(tokens);\n        fetchBalances(tokens);\n        console.log(fetchBalances)\n      } catch (error) {\n        console.error(\"Error fetching watchlist:\", error);\n      }\n    }\n  };\n\n  const fetchBalances = async (tokens) => {\n    if (web3 && account) {\n      const newBalances = {};\n      for (const token of tokens) {\n        try {\n          const tokenContract = new web3.eth.Contract(ERC20ABI, token);\n          const balance = await tokenContract.methods.balanceOf(account).call();\n          newBalances[token] = web3.utils.fromWei(balance, 'ether');\n        } catch (error) {\n          console.error(`Error fetching balance for token ${token}:`, error);\n          newBalances[token] = 'Error';\n        }\n      }\n      setBalances(newBalances);\n    }\n  };\n\n  return (\n    <div>\n      <button className=\"connect-button\" onClick={connectWallet}>\n        {account ? `Connected: ${account}` : 'Connect Wallet'}\n      </button>\n      {account && (\n        <div>\n          <h3>Your Watchlist:</h3>\n          <ul>\n            {watchlist.length > 0 ? (\n              watchlist.map((token, index) => (\n                <li key={index}>\n                  <span>Token Address: {token}</span>\n                  <br />\n                  <span>Balance: {balances[token] !== undefined ? balances[token] : 'Fetching...'}</span>\n                </li>\n              ))\n            ) : (\n              <p>No tokens in your watchlist.</p>\n            )}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TokenBalanceViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}