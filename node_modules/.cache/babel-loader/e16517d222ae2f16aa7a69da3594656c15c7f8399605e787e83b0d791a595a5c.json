{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/WalletBalance/test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SepoliaBalance = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState('0');\n  const [web3, setWeb3] = useState(null);\n  useEffect(() => {\n    // Initialize Web3\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      setWeb3(web3Instance);\n\n      // Request account access\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        setAccount(accounts[0]);\n        fetchBalance(web3Instance, accounts[0]);\n      }).catch(error => {\n        console.error(\"Error connecting to MetaMask:\", error);\n      });\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  }, []);\n  const fetchBalance = async (web3Instance, account) => {\n    try {\n      const balanceWei = await web3Instance.eth.getBalance(account);\n      const balanceEth = web3Instance.utils.fromWei(balanceWei, 'ether');\n      setBalance(balanceEth);\n    } catch (error) {\n      console.error(\"Error fetching balance:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#f4f4f4',\n      color: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#556b2f'\n      },\n      children: \"Wallent Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this), \" \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this), \" \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connect your MetaMask wallet to see your Sepolia ETH balance.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SepoliaBalance, \"k0kbBzVtSQB/LX5AIb/aV35EQnY=\");\n_c = SepoliaBalance;\nexport default SepoliaBalance;\nvar _c;\n$RefreshReg$(_c, \"SepoliaBalance\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","SepoliaBalance","_s","account","setAccount","balance","setBalance","web3","setWeb3","window","ethereum","web3Instance","request","method","then","accounts","fetchBalance","catch","error","console","alert","balanceWei","eth","getBalance","balanceEth","utils","fromWei","style","padding","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/WalletBalance/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\n\nconst SepoliaBalance = () => {\n    const [account, setAccount] = useState(null);\n    const [balance, setBalance] = useState('0');\n    const [web3, setWeb3] = useState(null);\n\n    useEffect(() => {\n        // Initialize Web3\n        if (window.ethereum) {\n            const web3Instance = new Web3(window.ethereum);\n            setWeb3(web3Instance);\n\n            // Request account access\n            window.ethereum.request({ method: 'eth_requestAccounts' })\n                .then(accounts => {\n                    setAccount(accounts[0]);\n                    fetchBalance(web3Instance, accounts[0]);\n                })\n                .catch(error => {\n                    console.error(\"Error connecting to MetaMask:\", error);\n                });\n        } else {\n            alert('MetaMask is not installed. Please install it to use this feature.');\n        }\n    }, []);\n\n    const fetchBalance = async (web3Instance, account) => {\n        try {\n            const balanceWei = await web3Instance.eth.getBalance(account);\n            const balanceEth = web3Instance.utils.fromWei(balanceWei, 'ether');\n            setBalance(balanceEth);\n        } catch (error) {\n            console.error(\"Error fetching balance:\", error);\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px', backgroundColor: '#f4f4f4', color: '#333' }}>\n            <h2 style={{ color: '#556b2f' }}>Wallent Balance</h2>\n            {account ? (\n                <div>\n                    <p><strong>Account:</strong> {account}</p>\n                    <p><strong>Balance:</strong> {balance} ETH</p>\n                </div>\n            ) : (\n                <p>Connect your MetaMask wallet to see your Sepolia ETH balance.</p>\n            )}\n        </div>\n    );\n};\n\nexport default SepoliaBalance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}