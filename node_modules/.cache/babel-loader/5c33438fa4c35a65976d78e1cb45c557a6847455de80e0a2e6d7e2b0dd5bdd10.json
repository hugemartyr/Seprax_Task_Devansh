{"ast":null,"code":"import axios from 'axios';\nimport Web3 from 'web3';\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL = 'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD';\nexport let usdPrice = 0;\nexport const getEthPriceInUSD = async () => {\n  try {\n    const response = await axios.get(COINGECKO_API_URL, {\n      params: {\n        ids: 'ethereum',\n        vs_currencies: 'usd'\n      }\n    });\n    const ethPriceInUSD = response.data.USD;\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return ethPriceInUSD;\n  } catch (error) {\n    console.error('Error fetching Ethereum price:', error);\n    return null;\n  }\n};\nexport const convertWeiToUSD = wei => {\n  const etherValue = web3.utils.fromWei(wei, 'ether');\n  return etherValue;\n};","map":{"version":3,"names":["axios","Web3","web3","COINGECKO_API_URL","usdPrice","getEthPriceInUSD","response","get","params","ids","vs_currencies","ethPriceInUSD","data","USD","console","log","error","convertWeiToUSD","wei","etherValue","utils","fromWei"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/Trial/GetTokenBalance/GetTokenBalance.jsx"],"sourcesContent":["import axios from 'axios';\nimport Web3 from 'web3';\n\n//implemented chainLinks price feeds but didn't work well at end\n\nconst web3 = new Web3();\nconst COINGECKO_API_URL = 'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD';\n\nexport let usdPrice: Number | null = 0;\n\n\nexport const getEthPriceInUSD = async (): Promise<number | null> => {\n  try {\n    const response = await axios.get(COINGECKO_API_URL, {\n      params: {\n        ids: 'ethereum',\n        vs_currencies: 'usd'\n      }\n    });\n\n    const ethPriceInUSD = response.data.USD;\n    usdPrice = ethPriceInUSD;\n    console.log(\"getEth price in usd : \", usdPrice);\n    return ethPriceInUSD;\n  } catch (error) {\n    console.error('Error fetching Ethereum price:', error);\n    return null\n  }\n};\n\n\nexport const convertWeiToUSD = (wei: string): string => {\n\n  const etherValue = web3.utils.fromWei(wei, 'ether');\n  return etherValue;\n\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAI,CAAC,CAAC;AACvB,MAAME,iBAAiB,GAAG,iEAAiE;AAE3F,OAAO,IAAIC,QAAuB,GAAG,CAAC;AAGtC,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAoC;EAClE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACJ,iBAAiB,EAAE;MAClDK,MAAM,EAAE;QACNC,GAAG,EAAE,UAAU;QACfC,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAGL,QAAQ,CAACM,IAAI,CAACC,GAAG;IACvCT,QAAQ,GAAGO,aAAa;IACxBG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEX,QAAQ,CAAC;IAC/C,OAAOO,aAAa;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,IAAI;EACb;AACF,CAAC;AAGD,OAAO,MAAMC,eAAe,GAAIC,GAAW,IAAa;EAEtD,MAAMC,UAAU,GAAGjB,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACH,GAAG,EAAE,OAAO,CAAC;EACnD,OAAOC,UAAU;AAEnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}