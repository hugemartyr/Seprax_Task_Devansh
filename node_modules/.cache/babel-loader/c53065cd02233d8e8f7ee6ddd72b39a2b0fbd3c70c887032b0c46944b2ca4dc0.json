{"ast":null,"code":"var _jsxFileName = \"/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ConnectWallet.css';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectWallet = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access\n        const accounts = await wndow.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]);\n\n        // Specify Sepolia network\n        const sepoliaProvider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.https://sepolia.infura.io/v3/3de1dfa83d77414f9e271ade5ca4f5d5/v3/YOUR_INFURA_PROJECT_ID');\n\n        // Fetch the balance\n        const balanceInWei = await sepoliaProvider.getBalance(accounts[0]);\n        const balanceInEther = ethers.utils.formatEther(balanceInWei);\n        setBalance(balanceInEther);\n      } catch (error) {\n        console.error(\"User rejected the request or an error occurred:\", error);\n      }\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Balance: \", balance ? `${balance} ETH` : 'Fetching balance...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet, \"mAjB1nPjdhRilHuIsZgDp4OQe3Y=\");\n_c = ConnectWallet;\nexport default ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","ConnectWallet","_s","account","setAccount","balance","setBalance","connectWallet","window","ethereum","accounts","wndow","request","method","sepoliaProvider","providers","JsonRpcProvider","balanceInWei","getBalance","balanceInEther","utils","formatEther","error","console","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devanshbaviskar/Documents/sperax_crypto_portfolio/src/components/ConnectWallet/ConnectWallet.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConnectWallet.css';\nimport { ethers } from 'ethers';\n\nconst ConnectWallet = () => {\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access\n        const accounts = await wndow.ethereum.request({ method: 'eth_requestAccounts' });\n        setAccount(accounts[0]);\n\n        // Specify Sepolia network\n        const sepoliaProvider = new ethers.providers.JsonRpcProvider('https://sepolia.infura.https://sepolia.infura.io/v3/3de1dfa83d77414f9e271ade5ca4f5d5/v3/YOUR_INFURA_PROJECT_ID');\n\n        // Fetch the balance\n        const balanceInWei = await sepoliaProvider.getBalance(accounts[0]);\n        const balanceInEther = ethers.utils.formatEther(balanceInWei);\n        setBalance(balanceInEther);\n      } catch (error) {\n        console.error(\"User rejected the request or an error occurred:\", error);\n      }\n    } else {\n      alert('MetaMask is not installed. Please install it to use this feature.');\n    }\n  };\n\n  return (\n    <div className=\"wallet-container\">\n      <button className=\"connect-button\" onClick={connectWallet}>\n        {account ? `Connected: ${account}` : \"Connect MetaMask\"}\n      </button>\n      {account && (\n        <div className=\"wallet-info\">\n          <p>Balance: {balance ? `${balance} ETH` : 'Fetching balance...'}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAC5B,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAACG,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QAChFT,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAEvB;QACA,MAAMI,eAAe,GAAG,IAAIhB,MAAM,CAACiB,SAAS,CAACC,eAAe,CAAC,gHAAgH,CAAC;;QAE9K;QACA,MAAMC,YAAY,GAAG,MAAMH,eAAe,CAACI,UAAU,CAACR,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClE,MAAMS,cAAc,GAAGrB,MAAM,CAACsB,KAAK,CAACC,WAAW,CAACJ,YAAY,CAAC;QAC7DX,UAAU,CAACa,cAAc,CAAC;MAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IACF,CAAC,MAAM;MACLE,KAAK,CAAC,mEAAmE,CAAC;IAC5E;EACF,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B1B,OAAA;MAAQyB,SAAS,EAAC,gBAAgB;MAACE,OAAO,EAAEpB,aAAc;MAAAmB,QAAA,EACvDvB,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;IAAkB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,EACR5B,OAAO,iBACNH,OAAA;MAAKyB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B1B,OAAA;QAAA0B,QAAA,GAAG,WAAS,EAACrB,OAAO,GAAG,GAAGA,OAAO,MAAM,GAAG,qBAAqB;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAtCID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}